syntax = "proto3";

message Message {
    string user_id = 1; //Не используется с версии контракта 3. Даже если будет передано, не будет использовано. Перенесено в InitialSettings
    int64 message_id = 2; //Обязательно
    int32 last = 3; // false = -1 | 0 - undefined | true = 1 // default=false //Обязательно
    string token = 4; //Опционально 
    string user_channel = 11; //Не используется с версии контракта 3. Даже если будет передано, не будет использовано. Перенесено в InitialSettings
    string vps_token = 12; //Устарело с версии 3, должен передаваться в token = 4
    repeated DevContext dev_context = 13; ////Устарело с версии 3. 
    string message_name = 14; //Опционально
    int32 version = 15; //Обязательно //версия 3
    oneof content {
        Voice voice = 5;
        Text text = 6;
        SystemMessage system_message = 7; // JSON as String.
        LegacyDevice legacy_device = 8;//С версии 2 будет отказ, как нарушение контракта
        Settings settings = 9;//Отправляется во время сессии (не на старте), если необходимо переопределить настройки. На старте сессии надо использовать InitialSettings
        Status status = 10;
        Device device = 16; //Не используется с версии контракта 3. Даже если будет передано, не будет использовано. Перенесено в InitialSettings
        Bytes bytes = 17;//Массив данных для передачи сервису потребителю, в виде байтов
        InitialSettings initial_settings = 18;// Присылается первым сообщением после открытии сессии, они определяют контекст сессии, если не будет прислано будет ошибка
    }
    int64 timestamp = 19; // время создания чанка
    map<string, string> meta = 20; // для ufsInfo и т.д.
}
 
//С версии контракта 3
message InitialSettings {
    string user_id = 1;//Обязательно (max 36 символов)
    string user_channel = 2;//Обязательно. Пример, SBOL, B2C и т д
    Device device = 3;//Обязательно
    Settings settings = 4;//Опционально
    string locale = 5; //Локаль пользователя (для транслирования user-friendly текстов ошибок на клиента в status.description)
}
  
//Присылается только в рамках InitialSettings
message Device {
    string platform_type = 1;  // Пример, ANDROID
    string platform_version = 2;
    string surface = 3;////Обязательно. Пример, SBERBOX
    string surface_version = 4;
    string features = 5;// JSON as String.
    string capabilities = 6;// JSON as String.
    string device_id = 7;
    string device_manufacturer = 8;
    string device_model = 9;
    string additional_info = 10; // JSON as String, который будет добавлен в блок additionalInfo блока device
}
  
//Может присылаться как в рамках InitialSettings, при открытии сессии, так и уже в сессии, тем самым переопределяя дальнейшее поведение сессии
message Settings {
    int32 dubbing = 1; // false = -1 | 0 - undefined | true = 1 // default:true
    int32 echo = 2; // false = -1 | 0 - undefined | true = 1 // default:false
    string tts_engine = 3; // tts engine alias в vps
    string asr_engine = 4;// asr engine alias в vps
    int32 asr_auto_stop = 5;//
    int32 dev_mode = 6;// trace enabler ----Не используется с версии контракт 3. Даже если будет передано, не будет использовано
    string auth_connector = 7; //Алиас коннектора для аутентификации. Должен совпадать с ключем в настройках auth:auth-config:КЛЮЧ
    string surface = 8; //Не используется с версии контракт 3. Даже если будет передано, не будет использовано. Значение должно передаваться в device
}
 
message LegacyDevice { // Не используется с версии контракт 3. Даже если будет передано, будет ошибка
    string client_type = 1;
    string channel = 2;
    string channel_version = 3;
    string platform_name = 4;
    string platform_version = 5;
    string sdk_version = 6;
    string protocol_version = 7;
}
 
message Voice {
    bytes data = 1;
}
  
message Text {
    string data = 1;//текст
    string type = 2;//тип разметки
}
  
message SystemMessage {
    string data = 1; // JSON as String.
}
 
message Status {
    int32 code = 1; //код статуса/ошибки
    string description = 2; //описание статуса/ошибки
    string technical_description = 3; //техническое описание статуса/ошибки
}
 
message Bytes {
    bytes data = 1;//Массив байтов для передачи сервису потребителю
    string desc = 2;//Описание для логов, что за массив байтов
}

message DevContext {
    string name = 1;
    int64 timestamp_ms = 2;
    string data = 3;
}