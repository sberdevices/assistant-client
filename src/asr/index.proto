syntax = "proto3";

// --- добавлено Бондарь Р.О
// --- документация ASR : https://sbtatlas.sigma.sbrf.ru/wiki/pages/viewpage.action?pageId=1880294872

option optimize_for = LITE_RUNTIME;

message Variables {
    map<string,string> variables = 1;
}

message UndecodedSeconds {
    float undecoded_seconds = 1;
}

message FullyFinalized {                            // Пакет об окончании обработки от сервера к клиента. Должен быть упакован в PacketWrapperFromServer.fully_finalized_field

}

message EmotionResult {                             // Результаты определения эмоций. Эмоции определяются только для всего аудио целиком,
                                                    // высылаются только когда DecoderResult.is_final = true, т.е. в конце распознавания.
    string name = 1;                                // Имя эмоции: сейчас может быть "positive", "negative" и "neutral"
    float confidence = 2;                           // Уверенность в эмоции от 0.0 до 1.0.
}

message Hypothesis {                                // Гипотеза распознавания
    string words = 1;                               // Ненормализованный результат, например "раз два три москва"
    float acoustic_cost = 2;
    float linguistic_cost = 3;
    float final_cost = 4;
    float phrase_start = 5;
    float phrase_end = 6;
    string normalized_text = 7;                     // Нормализованный результат, например "1 2 3 Москва"
}

message DecoderResult {                             // Результат работы ASR. Должен быть упакован в PacketWrapperFromServer.decoder_result_field
    message ContextAnswer {
        message ContextRef {                            // Результат поиска в контекстах
            string id = 1;                              // В какой контекст попали.
            int32 index = 2;                            // В какой элемент попали (индекс в исходном списке, считается с 0)
            string original_value = 3;                  // Оригинальное значение элемента контекста, например "Иван Петров".
            string predicted_value = 4;                 // Распознанное значение контекста, например "Ивану Петрову"
            float score = 5;                            // Мера уверенности от 0.0 до 1.0
        }
        repeated ContextRef context_result = 1;
    }
    repeated Hypothesis hypothesis = 1;
    float chunk_start = 2;
    float chunk_end = 3;
    float time_endpoint_detection_ms = 4;
    float time_decoding_ms = 5;
    Variables variables = 6;
    bool is_final = 7;                              // Признак того, что это финальный результат
    repeated EmotionResult emotion_result = 8;      // Результат оценки эмоций, заполняется только если DecoderResult.is_final = true
    repeated ContextAnswer context_answer = 9;         // Результат попадания в контексты, заполняется только если DecoderResult.is_final = true
}

message ErrorResponse {
    string error_message = 1;
}

message PacketWrapperFromServer {                   // Все сообщения от сервера должны быть упакованы в этот тип сообщений
    oneof MessageType {
        UndecodedSeconds undecoded_seconds_field = 1;
        FullyFinalized fully_finalized_field = 2;
        // DecoderRestarted decoder_restarted_field = 3;
        DecoderResult decoder_result_field = 4;
        // EmotionList emotion_list = 5;
        // RequestCapabilitiesResponse request_capabilities_response = 6;
        // GetCapabilitiesResponse get_capabilities_response = 7;
        ErrorResponse error_response = 8;
        // GetEmotionParametersResponse get_emotion_parameters_response = 9;
    }
}